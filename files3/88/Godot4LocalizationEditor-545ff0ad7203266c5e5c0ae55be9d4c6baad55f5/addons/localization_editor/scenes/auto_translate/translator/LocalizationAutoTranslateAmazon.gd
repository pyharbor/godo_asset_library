# List of locales supported by Amazon translator for LocalizationEditor : MIT License
# @author Vladimir Petrenko
# @see https://aws.amazon.com/translate/
extends Object
class_name LocalizationAutoTranslateAmazon

static func locales() -> Array: #[LocalizationLocaleSingle]:
	return [
		LocalizationLocaleSingle.new("af", "Afrikaans"),
		LocalizationLocaleSingle.new("sq", "Albanian"),
		LocalizationLocaleSingle.new("am", "Amharic"),
		LocalizationLocaleSingle.new("ar", "Arabic"),
		LocalizationLocaleSingle.new("hy", "Armenian"),
		LocalizationLocaleSingle.new("az", "Azerbaijani"),
		LocalizationLocaleSingle.new("bn", "Bengali"),
		LocalizationLocaleSingle.new("bs", "Bosnian"),
		LocalizationLocaleSingle.new("bg", "Bulgarian"),
		LocalizationLocaleSingle.new("ca", "Catalan"),
		LocalizationLocaleSingle.new("zh", "Chinese (Simplified)"),
		LocalizationLocaleSingle.new("zh-TW", "Chinese (Traditional)"),
		LocalizationLocaleSingle.new("hr", "Croatian"),
		LocalizationLocaleSingle.new("cs", "Czech"),
		LocalizationLocaleSingle.new("da", "Danish"),
		LocalizationLocaleSingle.new("fa-AF", "Dari"),
		LocalizationLocaleSingle.new("nl", "Dutch"),
		LocalizationLocaleSingle.new("en", "English"),
		LocalizationLocaleSingle.new("et", "Estonian"),
		LocalizationLocaleSingle.new("fa", "Farsi (Persian)"),
		LocalizationLocaleSingle.new("tl", "Filipino, Tagalog"),
		LocalizationLocaleSingle.new("fi", "Finnish"),
		LocalizationLocaleSingle.new("fr", "French"),
		LocalizationLocaleSingle.new("fr-CA", "French (Canada)"),
		LocalizationLocaleSingle.new("ka", "Georgian"),
		LocalizationLocaleSingle.new("de", "German"),
		LocalizationLocaleSingle.new("el", "Greek"),
		LocalizationLocaleSingle.new("gu", "Gujarati"),
		LocalizationLocaleSingle.new("ht", "Haitian Creole"),
		LocalizationLocaleSingle.new("ha", "Hausa"),
		LocalizationLocaleSingle.new("he", "Hebrew"),
		LocalizationLocaleSingle.new("hi", "Hindi"),
		LocalizationLocaleSingle.new("hu", "Hungarian"),
		LocalizationLocaleSingle.new("is", "Icelandic"),
		LocalizationLocaleSingle.new("id", "Indonesian"),
		LocalizationLocaleSingle.new("ga", "Irish"),
		LocalizationLocaleSingle.new("it", "Italian"),
		LocalizationLocaleSingle.new("ja", "Japanese"),
		LocalizationLocaleSingle.new("kn", "Kannada"),
		LocalizationLocaleSingle.new("kk", "Kazakh"),
		LocalizationLocaleSingle.new("ko", "Korean"),
		LocalizationLocaleSingle.new("lv", "Latvian"),
		LocalizationLocaleSingle.new("lt", "Lithuanian"),
		LocalizationLocaleSingle.new("mk", "Macedonian"),
		LocalizationLocaleSingle.new("ms", "Malay"),
		LocalizationLocaleSingle.new("ml", "Malayalam"),
		LocalizationLocaleSingle.new("mt", "Maltese"),
		LocalizationLocaleSingle.new("mr", "Marathi"),
		LocalizationLocaleSingle.new("mn", "Mongolian"),
		LocalizationLocaleSingle.new("no", "Norwegian (BokmÃ¥l)"),
		LocalizationLocaleSingle.new("ps", "Pashto"),
		LocalizationLocaleSingle.new("pl", "Polish"),
		LocalizationLocaleSingle.new("pt", "Portuguese (Brazil)"),
		LocalizationLocaleSingle.new("pt-PT", "Portuguese (Portugal)"),
		LocalizationLocaleSingle.new("pa", "Punjabi"),
		LocalizationLocaleSingle.new("ro", "Romanian"),
		LocalizationLocaleSingle.new("ru", "Russian"),
		LocalizationLocaleSingle.new("sr", "Serbian"),
		LocalizationLocaleSingle.new("si", "Sinhala"),
		LocalizationLocaleSingle.new("sk", "Slovak"),
		LocalizationLocaleSingle.new("sl", "Slovenian"),
		LocalizationLocaleSingle.new("so", "Somali"),
		LocalizationLocaleSingle.new("es", "Spanish"),
		LocalizationLocaleSingle.new("es-MX", "Spanish (Mexico)"),
		LocalizationLocaleSingle.new("sw", "Swahili"),
		LocalizationLocaleSingle.new("sv", "Swedish"),
		LocalizationLocaleSingle.new("ta", "Tamil"),
		LocalizationLocaleSingle.new("te", "Telugu"),
		LocalizationLocaleSingle.new("th", "Thai"),
		LocalizationLocaleSingle.new("tr", "Turkish"),
		LocalizationLocaleSingle.new("uk", "Ukrainian"),
		LocalizationLocaleSingle.new("ur", "Urdu"),
		LocalizationLocaleSingle.new("uz", "Uzbek"),
		LocalizationLocaleSingle.new("vi", "Vietnamese"),
		LocalizationLocaleSingle.new("cy", "Welsh")
]

static func label_by_code(code: String) -> String:
	for locale in locales():
		if locale.code == code:
			return locale.code + " " + locale.name
	return ""
